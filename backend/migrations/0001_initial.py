# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-04 13:30
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('ISBN', models.CharField(db_column=b'ISBN', max_length=13, primary_key=True, serialize=False)),
                ('author', models.CharField(db_column=b'author', max_length=20)),
                ('publisher', models.CharField(db_column=b'publisher', max_length=40)),
                ('total_number', models.IntegerField(db_column=b'total_number')),
                ('left_number', models.IntegerField(db_column=b'left_number')),
                ('intro', models.TextField(blank=True, db_column=b'intro')),
                ('title', models.CharField(db_column=b'title', max_length=50)),
                ('surface', models.CharField(db_column=b'surface', max_length=40)),
            ],
            options={
                'db_table': 'book',
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
            },
        ),
        migrations.CreateModel(
            name='Borrow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateField(db_column=b'borrow_date', default=datetime.datetime(2017, 12, 4, 13, 30, 49, 978527))),
                ('return_date', models.DateField(db_column=b'return_date', default=datetime.datetime(2017, 12, 19, 13, 30, 49, 978552))),
                ('number', models.IntegerField(db_column=b'number', default=1)),
                ('renew_number', models.IntegerField(db_column=b'renew_number', default=1)),
                ('book', models.ForeignKey(db_column=b'ISBN', on_delete=django.db.models.deletion.CASCADE, to='backend.Book')),
            ],
            options={
                'db_table': 'borrow',
                'verbose_name': 'borrow',
                'verbose_name_plural': 'borrow',
            },
        ),
        migrations.CreateModel(
            name='Has_tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(db_column=b'ISBN', on_delete=django.db.models.deletion.CASCADE, to='backend.Book')),
            ],
            options={
                'db_table': 'book_tag_r',
                'verbose_name': 'has_tag',
                'verbose_name_plural': 'has_tag',
            },
        ),
        migrations.CreateModel(
            name='Own',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'role_permission_r',
                'verbose_name': 'own',
                'verbose_name_plural': 'own',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permission_id', models.AutoField(db_column=b'permission_id', primary_key=True, serialize=False)),
                ('right', models.CharField(db_column=b'right', max_length=20, unique=True)),
            ],
            options={
                'db_table': 'permissions',
                'verbose_name': 'permission',
                'verbose_name_plural': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(db_column=b'role_id', primary_key=True, serialize=False)),
                ('appellation', models.CharField(db_column=b'appellation', max_length=20, unique=True)),
            ],
            options={
                'db_table': 'role',
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(db_column=b'tag_id', primary_key=True, serialize=False)),
                ('tag_name', models.CharField(db_column=b'tag_name', max_length=20)),
            ],
            options={
                'db_table': 'tag',
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('borrower_available', models.IntegerField(db_column=b'borrower_available', default=15)),
                ('role', models.ForeignKey(db_column=b'role', on_delete=django.db.models.deletion.CASCADE, to='backend.Role')),
            ],
            options={
                'db_table': 'user',
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='own',
            name='permission',
            field=models.ForeignKey(db_column=b'permission', on_delete=django.db.models.deletion.CASCADE, to='backend.Permission'),
        ),
        migrations.AddField(
            model_name='own',
            name='role',
            field=models.ForeignKey(db_column=b'role', on_delete=django.db.models.deletion.CASCADE, to='backend.Role'),
        ),
        migrations.AddField(
            model_name='has_tag',
            name='tag',
            field=models.ForeignKey(db_column=b'tag_id', on_delete=django.db.models.deletion.CASCADE, to='backend.Tag'),
        ),
        migrations.AddField(
            model_name='borrow',
            name='user',
            field=models.ForeignKey(db_column=b'user_id', on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AlterUniqueTogether(
            name='own',
            unique_together=set([('role', 'permission')]),
        ),
        migrations.AlterUniqueTogether(
            name='has_tag',
            unique_together=set([('tag', 'book')]),
        ),
        migrations.AlterUniqueTogether(
            name='borrow',
            unique_together=set([('user', 'book')]),
        ),
    ]
